/** @license  MIT - Â©2013 Ruben Verborgh */
(function(tick){var func="function";function createDeferred(){var handler=function(onFulfilled,onRejected,value){var d;if(onFulfilled!==handler){d=createDeferred();handler.c.push({d:d,resolve:onFulfilled,reject:onRejected});return d.promise}var action=onRejected?"resolve":"reject",c,deferred,callback;for(var i=0,l=handler.c.length;i<l;i++){c=handler.c[i];deferred=c.d;callback=c[action];if(typeof callback!==func){deferred[action](value)}else{execute(callback,value,deferred)}}handler=createHandler(promise,value,onRejected)},promise={then:function(onFulfilled,onRejected){return handler(onFulfilled,onRejected)}};handler.c=[];return{promise:promise,resolve:function(value){handler.c&&handler(handler,true,value)},reject:function(reason){handler.c&&handler(handler,false,reason)}}}function createHandler(promise,value,success){return function(onFulfilled,onRejected){var callback=success?onFulfilled:onRejected,result;if(typeof callback!==func){return promise}execute(callback,value,result=createDeferred());return result.promise}}function execute(callback,value,deferred){tick(function(){var result;try{result=callback(value);if(result&&typeof result.then===func){result.then(deferred.resolve,deferred.reject)}else{deferred.resolve(result)}}catch(error){deferred.reject(error)}})}var exports={resolve:function(value){var promise={};promise.then=createHandler(promise,value,true);return promise},reject:function(reason){var promise={};promise.then=createHandler(promise,reason,false);return promise},deferred:createDeferred};if(typeof module==="undefined"){window.p=exports}else{module.exports=exports}})(typeof setImmediate!=="undefined"&&setImmediate||typeof process!=="undefined"&&process.nextTick||setTimeout);